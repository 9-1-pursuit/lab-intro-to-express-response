 - for file in routes folder (if using nested routes, file name would be path ex /person/:id) -> in route folder (person.js and paths would ("/" = /person and "/:id" =/person/id)
    -top of file:
        -const express = require("express")
        let router = express.Router()
    -bottom of file:
        -module.exports = router
    - app.js:
        - use person.js to handle /person endpoints in routes -> endpoint  === Router object :
            -const endpoint = require("./routes/person")
        -link route to particular path using .use() method: 
            -app.use("/person", endpoint) 
 
 - if need to use different CRUD methods on same path use .route() to chain :
        router.route("/:value")
        .get((req,resp) => {
            resp.send("get info")
        })
        .put((req,resp) => {
            resp.send("update info")
        })
        .delete((req,resp) => {
            resp.send("delete info")
        })
    
    - using .param(): middleware (runs before resp is sent to user)
        - router.param(<param value(string)>, (req, res, next, paramValue(variable used)) => {
            whenever the route finds set parameter, run THIS code
            req is object so can save value to req.(whatever) then access in the resp.send() (next step/line of code) to use in resp
            needs the next() to signal to run next code in line unless infinite loading 
        })